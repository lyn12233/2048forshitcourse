#import "utils.typ":*

//set default text font and style
#set text(font: font_zh.SongTi, size: font_size_zh.XiaoSi)
#set par(leading: 12pt, first-line-indent: 0em, justify: true)

//set equation props
#set math.equation(numbering: "(1)", supplement: "")
#show figure.caption: set text(font:font_zh.SongTi, size: font_size_zh.WuHao)
#show figure.where(kind:image): set figure(supplement: "图") 
#show figure.where(kind:table): set figure(supplement: "表") 
#show figure.where(kind:table): set figure.caption(position:top)
#set pagebreak(weak: true)

//page style
#set page(
  footer: [
    #set align(center)
    #counter(page).display("1")
  ]
)

//bib upercase style; disable autogenerated footnote
#set footnote(numbering: "[1]")
#set footnote.entry(separator: none)
#show footnote.entry: hide


#include "preface.typ"

#Section[设计目标]

#MYPAR() 本次程序设计计划在命令行实现实时交互的2048小游戏。设计目标如下。

#SubSection[2048小游戏规则]

#MYPAR() 2048是一款著名的益智小游戏。其操作对象通常为4*4的方格阵列, 方格为空或显示2, ..., 2048之一的数, 操作规则为:
+ *移动*: 玩家给出移动方向, 方格按移动方向依次尝试与该方向相邻方格合并, 如果方格与相邻方格未发生合并且代表的值相同则进行合并。每进行一次移动后, 尝试在空方格生成2个值为2或4的方格, 空方格为一个时将其值改变为2或4。
+ *结束判定*: 发生一次移动后, 如果方格阵未发生改变, 且各个方向的移动均不可能改变方格阵, 则判定为失败; 如果首次出现值为2048的方格, 则判定为成功。

#SubSection[程序功能]

#MYPAR() 在除了实现2048小游戏基本逻辑以外, 程序还实现以下功能:
+ *提示模式*: 在用户启动游戏后, 输入Ctrl+H进入提示模式(即作弊模式)。提示模式下以最大合并数量为目标进行一次自动移动操作。一次游戏中提示模式不可改回正常模式, 以"(CHEATED)"字样进行标识, 游戏结束后不计入得分。
+ *用户信息*: 游戏支持多用户记录, 以命令行启动参数的第1、2项作为用户名和密码, 尝试注册或登录。默认用户和密码均为空字符串。
+ *计时和得分*: 游戏实时显示一次游戏从开始经历的时间, 以从开始到胜利的用时作为得分, 以最短用时作为当前用户的记录。
+ *界面渲染*: 游戏利用ANSI转义序列实现命令行覆写和彩色输出, 打印文本进行类GUI渲染。同时游戏根据窗口大小实时调整, 使界面尽可能居中。
+ *其他*: 游戏界面显示简短的操作说明。用户按Ctrl+C退出, 按Ctrl+Q打开GitHub主页。


#Section[程序实现]

#MYPAR() 采用模块化编程, 程序结构见(), 程序状态逻辑见()。


#Section[程序说明]

#SubSection[运行方法]
#MYPAR()可以通过如下指令运行此2048小游戏。

#block()[
#raw("\tcd path/to/game/folder\n\tpython .",lang:"bash")]

#MYPAR()

#SubSection[主要函数、值的说明]

#Section[程序演示]